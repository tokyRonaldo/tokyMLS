
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.7.0
 * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
 */
Prisma.prismaVersion = {
  client: "6.7.0",
  engine: "3cff47a7f5d65c3ea74883f1d736e41d68ce91ed"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  username: 'username',
  email: 'email',
  password: 'password',
  role: 'role',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CoursScalarFieldEnum = {
  id: 'id',
  nom: 'nom',
  sousTitre: 'sousTitre',
  description: 'description',
  level: 'level',
  content: 'content',
  image: 'image',
  video: 'video',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  userId: 'userId',
  categoryId: 'categoryId'
};

exports.Prisma.LessonScalarFieldEnum = {
  id: 'id',
  title: 'title',
  videoUrl: 'videoUrl',
  document: 'document',
  contenu: 'contenu',
  coursId: 'coursId'
};

exports.Prisma.SuivreCoursScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  coursId: 'coursId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserLessonScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  lessonId: 'lessonId',
  isFinished: 'isFinished'
};

exports.Prisma.QuizScalarFieldEnum = {
  id: 'id',
  title: 'title',
  coursId: 'coursId'
};

exports.Prisma.QuizQuestionScalarFieldEnum = {
  id: 'id',
  type: 'type',
  content: 'content',
  answer: 'answer',
  quizId: 'quizId'
};

exports.Prisma.QuizOptionScalarFieldEnum = {
  id: 'id',
  quizQuestionId: 'quizQuestionId',
  nom: 'nom'
};

exports.Prisma.QuizResultScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  quizId: 'quizId',
  score: 'score',
  attemptAt: 'attemptAt'
};

exports.Prisma.VisioSessionScalarFieldEnum = {
  id: 'id',
  titre: 'titre',
  description: 'description',
  coursId: 'coursId',
  formateurId: 'formateurId',
  lienVisio: 'lienVisio',
  dateDebut: 'dateDebut',
  dateFin: 'dateFin',
  estEnregistre: 'estEnregistre',
  lienEnregistrement: 'lienEnregistrement',
  status: 'status'
};

exports.Prisma.ParticipationVisioScalarFieldEnum = {
  id: 'id',
  visioId: 'visioId',
  utilisateurId: 'utilisateurId',
  estPresent: 'estPresent',
  tempsDeConnexion: 'tempsDeConnexion',
  feedback: 'feedback'
};

exports.Prisma.CategoryScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.UserOrderByRelevanceFieldEnum = {
  username: 'username',
  email: 'email',
  password: 'password'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.CoursOrderByRelevanceFieldEnum = {
  nom: 'nom',
  sousTitre: 'sousTitre',
  description: 'description',
  level: 'level',
  content: 'content',
  image: 'image',
  video: 'video'
};

exports.Prisma.LessonOrderByRelevanceFieldEnum = {
  title: 'title',
  videoUrl: 'videoUrl',
  document: 'document',
  contenu: 'contenu'
};

exports.Prisma.QuizOrderByRelevanceFieldEnum = {
  title: 'title'
};

exports.Prisma.QuizQuestionOrderByRelevanceFieldEnum = {
  type: 'type',
  content: 'content',
  answer: 'answer'
};

exports.Prisma.QuizOptionOrderByRelevanceFieldEnum = {
  nom: 'nom'
};

exports.Prisma.VisioSessionOrderByRelevanceFieldEnum = {
  titre: 'titre',
  description: 'description',
  lienVisio: 'lienVisio',
  lienEnregistrement: 'lienEnregistrement',
  status: 'status'
};

exports.Prisma.ParticipationVisioOrderByRelevanceFieldEnum = {
  feedback: 'feedback'
};

exports.Prisma.CategoryOrderByRelevanceFieldEnum = {
  name: 'name',
  description: 'description'
};
exports.Role = exports.$Enums.Role = {
  admin: 'admin',
  formateur: 'formateur',
  etudiant: 'etudiant'
};

exports.Prisma.ModelName = {
  User: 'User',
  Cours: 'Cours',
  Lesson: 'Lesson',
  SuivreCours: 'SuivreCours',
  UserLesson: 'UserLesson',
  Quiz: 'Quiz',
  QuizQuestion: 'QuizQuestion',
  QuizOption: 'QuizOption',
  QuizResult: 'QuizResult',
  VisioSession: 'VisioSession',
  ParticipationVisio: 'ParticipationVisio',
  Category: 'Category'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
